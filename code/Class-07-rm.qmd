---
title: "Assignment 7 - Repeated measure"
author: "Priscila Campos"  
format:
  html:
    code-fold: true 
    embed-resources: true
    toc: true
    number-sections: true
    theme: cerulean
---

# Introduction  
This assignment will ask you to conduct a repeated measure analysis. 

For that, you will first need to watch (and code along with) the following repeated measure video:

- repeated measure lecture: https://youtu.be/-ANqcQhB--A?si=7YeeYqDgcLsj5erW&t=4268 (starts at 01:11:08, watch till the end, about 50 min)

- repeated measure lab part 1: https://youtu.be/GY2e-9M5bFM?si=TIw5F4EF2m9Dx5uK (watch full video, ~1h 50 min)  

- repeated measure lab part 2: https://youtu.be/F3vg89ymLeM?si=Zv-RPIdS8mig4EMb
(watch full video, ~2h)

- The partial script for the video above is in our GitHub repository, 04-classcode, **03-11_repeatedmeasure_partial.qmd**.  

- The data set for this exercise is in oir GitHub repository, 03-classcode, **wheat_nk_balkh_rm.csv**.


**AFTER watching the video and developing the code in class**, then start working on this HW assignment.  

# Instructions  

  - Create on your GitHub a repo named `06_rm`.  
  - Clone it to your computer, create the necessary subfolders.
  - Move the script **03-11_repeatedmeasure_partial.qmd** into the `code` subfolder.
  - Move this script into the `code` subfolder  
  - Move the **wheat_nk_balkh_rm.csv** data set into the `data` subfolder  
  - On this script, fill your name under the `title` section of the YAML  
  
# Goal of this assignment  
The goal is this assignment is for you to **learn about and conduct a full repeated measure analysis**.

# Setup
```{r, warning=FALSE, message=FALSE}
library(tidyverse)
library(car)
library(lme4)
library(broom)
library(emmeans)
library(multcomp)
library(nlme)
library(broom.mixed)
```

#Reading data and data wrangling
```{r, warning=FALSE, message=FALSE}
rm_rcbd_df <- read_csv("../data//wheat_nk_balkh_rm.csv") %>%
  mutate(across(trt:splot, ~factor(.))) %>%
  mutate(fdap = factor(dap))

rm_rcbd_df
```

#EDA
```{r, warning=FALSE, message=FALSE}  
summary(rm_rcbd_df)
```


```{r, warning=FALSE, message=FALSE}
ggplot(rm_rcbd_df, aes(x = fdap,
                       y = yield_kgha)) +
  geom_boxplot() +
  facet_grid(.~trtname)
```


#Model 1 - Default
```{r, warning=FALSE, message=FALSE}
options(contrasts = c("contr.sum", "contr.poly"))

mod1_default <- lme(yield_kgha ~ krate_kgha*nrate_kgha*fdap,
                    random = ~ 1 | block/krate_kgha/nrate_kgha,
                    data = rm_rcbd_df
                    )
mod1_default

ACF(mod1_default, resType = "n") %>%
  plot(alpha = 0.01)

Anova(mod1_default, type = 3)

```

#Model 2 - Compound Symmetry
```{r, warning=FALSE, message=FALSE}
mod2_cs  <- lme(yield_kgha ~ krate_kgha*nrate_kgha*fdap,
                    random = ~ 1 | block/krate_kgha/nrate_kgha,
                    correlation = corCompSymm(form = ~dap),
                    data = rm_rcbd_df
                    )
mod2_cs

ACF(mod2_cs, resType = "n") %>%
  plot(alpha = 0.01)

intervals(mod2_cs, which = "var-cov")

anova.lme(mod1_default,
      mod2_cs
      )
```

#Model 3 - General
```{r, warning=FALSE, message=FALSE}
mod3_gen <- lme(
  yield_kgha ~ krate_kgha*nrate_kgha*fdap,
  random = ~ 1|block/krate_kgha/nrate_kgha,
  correlation = corSymm(),
  data = rm_rcbd_df)
mod3_gen

ACF(mod3_gen, resType = "n") %>%
  plot(alpha = 0.01)

anova.lme(mod1_default,
          mod2_cs,
          mod3_gen)

intervals(mod3_gen, which = "var-cov")
```

#Model 4 - Autorefressive order 1(AR1)
```{r, warning=FALSE, message=FALSE}
mod4_ar1 <- lme(
  yield_kgha ~ krate_kgha*nrate_kgha*fdap,
  random = ~ 1|block/krate_kgha/nrate_kgha,
  correlation = corAR1(form = ~ dap),
  data = rm_rcbd_df)

mod4_ar1

ACF(mod4_ar1, resType = "n") %>%
  plot(alpha = 0.01)

anova.lme(mod1_default,
          mod2_cs,
          mod3_gen,
          mod4_ar1)

intervals(mod4_ar1, which = "var-cov")
```

#Model 5 - Autoregressive order moving average(ARMA11)
```{r, warning=FALSE, message=FALSE}
mod5_arma11 <- lme(
  yield_kgha ~ krate_kgha*nrate_kgha*fdap,
  random = ~ 1|block/krate_kgha/nrate_kgha,
  correlation = corARMA(p=1, q=1),
  data = rm_rcbd_df)

ACF(mod5_arma11, resType = "n") %>%
  plot(alpha = 0.01)

intervals(mod5_arma11, which = "var-cov")

anova.lme(mod1_default,
          mod2_cs,
          mod3_gen,
          mod4_ar1,
          mod5_arma11)
```

#Model 6 - Exponential
```{r, warning=FALSE, message=FALSE}
mod6_exp <- lme(
  yield_kgha ~ krate_kgha*nrate_kgha*fdap,
  random = ~ 1|block/krate_kgha/nrate_kgha,
  correlation = corExp(form = ~dap),
  data = rm_rcbd_df)
mod6_exp

Variogram(mod6_exp)%>%
  plot()

ACF(mod6_exp, resType = "n") %>%
  plot(alpha = 0.01)

intervals(mod6_exp, which = "var-cov")

anova.lme(mod1_default,
          mod2_cs,
          mod3_gen,
          mod4_ar1,
          mod5_arma11,
          mod6_exp)
```

#Model 7 - Gaussian
```{r, warning=FALSE, message=FALSE}
mod7_gaus <- lme(
  yield_kgha ~ krate_kgha*nrate_kgha*fdap,
  random = ~ 1|block/krate_kgha/nrate_kgha,
  correlation = corGaus(form = ~dap),
  data = rm_rcbd_df)
mod7_gaus

ACF(mod7_gaus, resType = "n") %>%
  plot(alpha = 0.01)
Variogram(mod7_gaus)%>%
  plot()

intervals(mod7_gaus, which = "var-cov")

anova.lme(mod1_default,
          mod2_cs,
          mod3_gen,
          mod4_ar1,
          mod5_arma11,
          mod6_exp,
          mod7_gaus)
```

#Model 8 - Linear
```{r, warning=FALSE, message=FALSE}
mod8_lin <- lme(
  yield_kgha ~ krate_kgha*nrate_kgha*fdap,
  random = ~ 1|block/krate_kgha/nrate_kgha,
  correlation = corLin(form = ~dap),
  data = rm_rcbd_df)
mod8_lin

ACF(mod8_lin, resType = "n") %>%
  plot(alpha = 0.01)

Variogram(mod8_lin)%>%
  plot()

anova.lme(mod1_default,
          mod2_cs,
          mod3_gen,
          mod4_ar1,
          mod5_arma11,
          mod6_exp,
          mod7_gaus,
          mod8_lin)

intervals(mod8_lin, which = "var-cov")
```

#Model 9 - Rational Quadratic
```{r, warning=FALSE, message=FALSE}
mod9_rq <- lme(
  yield_kgha ~ krate_kgha*nrate_kgha*fdap,
  random = ~ 1|block/krate_kgha/nrate_kgha,
  correlation = corRatio(form = ~dap),
  data = rm_rcbd_df)
mod9_rq

ACF(mod9_rq, resType = "n") %>%
  plot(alpha = 0.01)

Variogram(mod9_rq)%>%
  plot()

intervals(mod9_rq, which = "var-cov")

anova.lme(mod1_default,
          mod2_cs,
          mod3_gen,
          mod4_ar1,
          mod5_arma11,
          mod6_exp,
          mod7_gaus,
          mod8_lin,
          mod9_rq)
```

#Model 10 - Spherical
```{r, warning=FALSE, message=FALSE}
mod10_sph <- lme(
  yield_kgha ~ krate_kgha*nrate_kgha*fdap,
  random = ~ 1|block/krate_kgha/nrate_kgha,
  correlation = corSpher(form = ~dap),
  data = rm_rcbd_df)
mod10_sph

ACF(mod10_sph, resType = "n") %>%
  plot(alpha = 0.01)

Variogram(mod10_sph)%>%
  plot()

intervals(mod10_sph, which = "var-cov")

anova.lme(mod1_default,
          mod2_cs,
          mod3_gen,
          mod4_ar1,
          mod5_arma11,
          mod6_exp,
          mod7_gaus,
          mod8_lin,
          mod9_rq,
          mod10_sph)
```

#Final model comparison and selection
```{r, warning=FALSE, message=FALSE}
anova.lme(mod1_default,
          mod2_cs,
          mod3_gen,
          mod4_ar1,
          mod5_arma11,
          mod6_exp,
          mod7_gaus,
          mod8_lin,
          mod9_rq,
          mod10_sph) %>%
  as.data.frame() %>%
  rownames_to_column(var="modelname") %>%
  janitor::clean_names() %>%
  dplyr::select(modelname, model, df, aic, bic) %>%
  arrange(aic) 
```

#Checking residuals
```{r, warning=FALSE, message=FALSE}
mod3_gen_resid <- augment(mod3_gen) %>%
  mutate(.stdresid = resid(mod3_gen,
                           type="pearson",
                           scaled=T))
mod3_gen_resid
```

#Block random effect
```{r, warning=FALSE, message=FALSE}
ranef(mod3_gen)[[1]]%>%
  ggplot(aes(sample=`(Intercept)`)) +
  stat_qq(shape=21,
          fill="purple",
          size=3,
          alpha=.7)+
  stat_qq_line() +
  labs(x="Theoretical quantile",
       y = "Sample quantile") +
  theme_bw()
```

#Block:krate random effects
```{r, warning=FALSE, message=FALSE}
ranef(mod3_gen)[[2]]%>%
  ggplot(aes(sample=`(Intercept)`)) +
  stat_qq(shape=21,
          fill="purple",
          size=3,
          alpha=.7)+
  stat_qq_line() +
  labs(x="Theoretical quantile",
       y = "Sample quantile") +
  theme_bw()
```

#Block:krate:nrate random effects
```{r, warning=FALSE, message=FALSE}
ranef(mod3_gen)[[3]]%>%
  ggplot(aes(sample=`(Intercept)`)) +
  stat_qq(shape=21,
          fill="purple",
          size=3,
          alpha=.7)+
  stat_qq_line() +
  labs(x="Theoretical quantile",
       y = "Sample quantile") +
  theme_bw()
```

# Within-group errors
```{r, warning=FALSE, message=FALSE}
ggplot(mod3_gen_resid, aes(x=.fitted, y=.stdresid)) +
  geom_hline(yintercept = 0, color="red")+
  geom_point(shape=21,
             fill="purple",
             size=3,
             alpha=.7)+
  geom_smooth()+
  geom_hline(yintercept = c(-3,3), color="red")+
  theme_bw()

ggplot(mod3_gen_resid, aes(sample=.stdresid)) +
  stat_qq(shape=21,
          fill="purple",
          fill=3,
          alpha=0.7)+
  stat_qq_line() +
  labs(x="Theoretical quantile",
       y="Sample quantile")+
  theme_bw()
```

#Inference - correct model
```{r, warning=FALSE, message=FALSE}
Anova(mod3_gen, type=3)
```

#pairwise comparison (K x N x dap interaction)
```{r, warning=FALSE, message=FALSE}
rm_rcbd_cld_kndap <- emmeans(mod3_gen,
                             ~fdap|krate_kgha:nrate_kgha)%>%
  cld(reversed = T,
      Letters=letters,
      adjust="none")%>%
  as.data.frame()%>%
  mutate(letter=trimws(.group))%>%
  mutate(trtname=paste0(nrate_kgha,"+",krate_kgha))
rm_rcbd_cld_kndap
```

#Final plot
```{r, warning=FALSE, message=FALSE}
#! fig-width: 15
#! fig-height: 5
ggplot(mapping = aes(fill=fdap))+
  geom_boxplot(data=rm_rcbd_df,
               aes(x=fdap, y=yield_kgha),
               alpha=.8)+
  geom_jitter(data=rm_rcbd_df,
              aes(x=fdap, y=yield_kgha),
              shape=21,
              size=3,
              alpha=.5)+
  geom_label(data=rm_rcbd_cld_kndap,
             aes(x=fdap, y=emmean, label=letter),
             fill="white"
             )+
  labs(x="Harvest, days after planting",
       y="Yield (kg/ha)")+
  scale_fill_viridis_d()+
  facet_grid(.~trtname)+
  theme(panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank(),
        legend.position = "none")
```

```{r}

#if you put fdap:krate:nrate that would give you all the mean comparisons. 
rm_rcbd_cld_kndap_default <- emmeans(mod1_default,
                             ~fdap|krate_kgha:nrate_kgha)%>%
  cld(reversed = T,
      Letters=letters,
      adjust="none")%>%
  as.data.frame()%>%
  mutate(letter=trimws(.group))%>%
  mutate(trtname=paste0(nrate_kgha,"+",krate_kgha))
rm_rcbd_cld_kndap_default

#! fig-width: 15
#! fig-height: 5
ggplot(mapping = aes(fill=fdap))+
  geom_boxplot(data=rm_rcbd_df,
               aes(x=fdap, y=yield_kgha),
               alpha=.8)+
  geom_jitter(data=rm_rcbd_df,
              aes(x=fdap, y=yield_kgha),
              shape=21,
              size=3,
              alpha=.5)+
  geom_label(data=rm_rcbd_cld_kndap_default,
             aes(x=fdap, y=emmean, label=letter),
             fill="white"
             )+
  labs(x="Harvest, days after planting",
       y="Yield (kg/ha)")+
  scale_fill_viridis_d()+
  facet_grid(.~trtname)+
  theme(panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank(),
        legend.position = "none")

Anova(mod1_default, type=3)


```
Once you finish coding along with the videos, answer the following questions.

# Questions  
In class, we decided to use AIC as the metric to select the best model, and this determined the best model to be the one with a general error correlation matrix structure. If we had used BIC as the metric, then the model selected would have been the default model. Here, you are asked to use BIC and thus select the default model as the best, and perform all the steps after model selection. You may copy and paste the class script, and adapt the copied version to implement these changes.  

```{r, warning=FALSE, message=FALSE}
anova.lme(mod1_default,
          mod2_cs,
          mod3_gen,
          mod4_ar1,
          mod5_arma11,
          mod6_exp,
          mod7_gaus,
          mod8_lin,
          mod9_rq,
          mod10_sph) %>%
  as.data.frame() %>%
  rownames_to_column(var="modelname") %>%
  janitor::clean_names() %>%
  dplyr::select(modelname, model, df, aic, bic) %>%
  arrange(bic)
```


## Q1: Include here the residual assessment of the default model. Include each plot and its interpretation. How do these residuals from the default model visually compare to those from the general model?  
```{r, warning=FALSE, message=FALSE}
mod1_default_resid <- augment(mod1_default) %>%
  mutate(.stdresid = resid(mod1_default,
                           type="pearson",
                           scaled=T))
mod1_default_resid
```

##Block random effects
```{r, warning=FALSE, message=FALSE}
ranef(mod1_default)[[1]]%>%
  ggplot(aes(sample=`(Intercept)`)) +
  stat_qq(shape=21,
          fill="purple",
          size=3,
          alpha=.7)+
  stat_qq_line() +
  labs(x="Theoretical quantile",
       y = "Sample quantile") +
  theme_bw()

ggsave("../output/block_random_effect.png")
```
We only see a few points because there's only four blocks, there's a big distance from the line, it is hard to get a real estimate due to the lack of points.


##Block:krate random effects
```{r, warning=FALSE, message=FALSE}
ranef(mod1_default)[[2]]%>%
  ggplot(aes(sample=`(Intercept)`)) +
  stat_qq(shape=21,
          fill="purple",
          size=3,
          alpha=.7)+
  stat_qq_line() +
  labs(x="Theoretical quantile",
       y = "Sample quantile") +
  theme_bw()

ggsave("../output/blockkrate_random_effects.png")
```
The points are close to the line, nothing to worry about. 


##block:krate:nrate
```{r, warning=FALSE, message=FALSE}
ranef(mod1_default)[[3]]%>%
  ggplot(aes(sample=`(Intercept)`)) +
  stat_qq(shape=21,
          fill="purple",
          size=3,
          alpha=.7)+
  stat_qq_line() +
  labs(x="Theoretical quantile",
       y = "Sample quantile") +
  theme_bw()

ggsave("../output/block_krate_nrate_random_effects.png")
```
Slight deviation on the tails, but nothing to worry about. 


##withing group errors
```{r, warning=FALSE, message=FALSE}
#assumption for residual
ggplot(mod1_default_resid, aes(x=.fitted, y=.stdresid)) +
  geom_hline(yintercept = 0, color="red")+
  geom_point(shape=21,
             fill="purple",
             size=3,
             alpha=.7)+
  geom_smooth()+
  geom_hline(yintercept = c(-3,3), color="red")+
  theme_bw()
ggsave("../output/within_group_errors.png")

ggplot(mod1_default_resid, aes(sample=.stdresid)) +
  stat_qq(shape=21,
          fill="purple",
          fill=3,
          alpha=0.7)+
  stat_qq_line() +
  labs(x="Theoretical quantile",
       y="Sample quantile")+
  theme_bw()

ggsave("../output/within_group_erors.png")
```
No pattern, independence, no outliers and variance is homogeneous, nothing to worry.


## Q2: Include here the ANOVA table from the default model. How does it compare with the ANOVA table from the general model? 
```{r, warning=FALSE, message=FALSE}
Anova_results <- Anova(mod1_default, type=3) %>%
  write.csv("../data/anova.csv")

```
The results from both Anova tables are very similar: fdap and Krate:nrate interaction are significant, their p values are very similar. 

# Submitting your work  
Once you have developed all the code and answers, make sure to Render this quarto file.  

**Notes on rendering**:  

- Make sure to render your work and inspect how the final html look like.  
- If it does not look professional for whatever reason, then fix the issue, re-render it, recheck.  
- Only send me your work once your html file looks professional.  
  - **DO NOT** delete the file's heading levels (# and ##). They set up the proper heading 1 and 2 levels, and I use them to guide my grading.  
  - If a given chunk is also outputting warnings or messages, inhibit this behavior by changing the chunk options `message` and `warning` to `FALSE` (I'll demo this in a moment).  
  
  - If, after rendered, 2 lines of text are connected and you wish to "break line" between them, add 2 extra spaces after the first one (I'lld demo this in a moment).  

After rendering, an .html file will be created on your `code` folder.  

Rename this file to `Assignment-07-rm-LASTNAME.html`.    

For ex., mine would be `Assignment-07-rm-Bastos.html`.

Submit your work by uploading the **html** file to **eLC Assigment #7 - Repeated measure** by Mar 25 11:59 pm.  
  




